apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]


    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    libraryVariants.all { variant ->
        if(variant.name.equalsIgnoreCase("release")) {
            variant.outputs.all { output ->
                if (outputFileName.endsWith('.aar')) {
                    outputFileName = "xLib" + "_V${rootProject.ext.android.versionName}_${releaseTime()}.aar"
                }
            }
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation (rootProject.ext.dependencies["espresso-core"], {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    api rootProject.ext.dependencies["appcompat-v7"]

    /* leakCanary */
    debugApi rootProject.ext.dependencies["leakCanary"]

    api rootProject.ext.dependencies["logger"]
    
    api rootProject.ext.dependencies["utilsCollection"]

    /* Dagger2 */
    api rootProject.ext.dependencies["dagger2-android"]
    api rootProject.ext.dependencies["dagger2-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger2-android-processor"]
    
    /* RxJava2 */
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxandroid2"]
    
    /* Fragmentation */
    api rootProject.ext.dependencies["fragmentation"]
    api rootProject.ext.dependencies["fragmentation-swipeback"]
    
    /* Retrofit */
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    
}

